{"version":3,"sources":["components/AddCategory.jsx","helpers/getGifs.js","components/GifGridItem.jsx","components/GifGrid.jsx","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","state","type","value","onChange","target","proTypes","PropTypes","func","isRequired","getGifs","category","a","url","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","isLoading","setstate","useEffect","then","imgs","useFetchGifs","loading","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"4NAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACZC,mBAAS,IADG,mBACzCC,EADyC,KAC7BC,EAD6B,KAYhD,OACE,sBAAMC,SARa,SAACC,GACpBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAS,IAC5BR,GAAc,SAACS,GAAD,OAAYP,GAAZ,mBAA2BO,OACzCN,EAAc,MAIhB,SACE,uBAAOO,KAAK,OAAOC,MAAOT,EAAYU,SAXtB,SAACP,GAAD,OAAOF,EAAcE,EAAEQ,OAAOF,aAgBpDZ,EAAYe,SAAU,CACpBd,cAAee,IAAUC,KAAKC,Y,mCCvBnBC,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACfC,EADe,iDACiCF,EADjC,+DAEFG,MAAMD,GAFJ,cAEfE,EAFe,gBAGEA,EAAKC,OAHP,uBAGbC,EAHa,EAGbA,KACFC,EAAOD,EAAKE,KAAI,SAAAC,GACpB,MAAO,CACLC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXT,IAAKO,EAAIG,OAAOC,iBAAiBX,QARhB,kBAWdK,GAXc,4CAAH,sDCEPO,EAAc,SAAC,GAAkB,IAAjBH,EAAgB,EAAhBA,MAAOT,EAAS,EAATA,IAClC,OACE,sBAAKa,UAAU,yCAAf,UACE,qBAAKC,IAAKd,EAAKe,IAAKN,IACpB,4BAAIA,QCFGO,EAAU,SAAC,GAAkB,IAAhBlB,EAAe,EAAfA,SAAe,ECDb,SAACA,GAAc,IAAD,EACdlB,mBAAS,CACjCwB,KAAM,GACNa,WAAW,IAH2B,mBACjC7B,EADiC,KAC1B8B,EAD0B,KAaxC,OAPAC,qBAAU,WACRtB,EAAQC,GAAUsB,MAAK,SAAAC,GAAI,OAAIH,EAAS,CACtCd,KAAKiB,EACLJ,WAAW,SAEZ,CAACnB,IAEGV,EDV0BkC,CAAaxB,GAAjCY,EAF0B,EAEhCN,KAAcmB,EAFkB,EAElBA,QAErB,OACE,qCACE,6BAAKzB,IACL,qBAAKe,UAAU,YAAf,SACGU,EAAU,4CAAqBb,EAAOJ,KAAI,SAACC,GAAD,OACzC,cAAC,EAAD,eAA8BA,GAAZA,EAAIC,aEmBjBgB,EAzBM,WAAO,IAAD,EAEW5C,mBAAS,CAAC,YAAa,YAAa,gBAF/C,mBAElB6C,EAFkB,KAEN9C,EAFM,KASzB,OACE,qCACE,8CACA,cAAC,EAAD,CAAaA,cAAiBA,IAC9B,uBAGA,6BAEI8C,EAAWnB,KAAK,SAAAR,GAAQ,OAAI,cAAC,EAAD,CAAwBA,SAAUA,GAApBA,YCnBpD4B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.d0dba8d0.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport PropTypes from 'prop-types'\n\nexport const AddCategory = ({ setCategories }) => {\n  const [inputValue, setInputValue] = useState(\"\");\n\n  const handleInput = (e) => setInputValue(e.target.value);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if(inputValue.trim().length > 0){\n      setCategories((state) => [inputValue, ...state]);\n      setInputValue(\"\");\n    }\n  };\n  return (\n    <form onSubmit={handleSubmit}>\n      <input type=\"text\" value={inputValue} onChange={handleInput} />\n    </form>\n  );\n};\n\nAddCategory.proTypes= {\n  setCategories: PropTypes.func.isRequired\n}\n","export const getGifs = async (category) => {\n  const url = `https://api.giphy.com/v1/gifs/search?q=${category}&limit=10&api_key=vUJ8NIKjYOV5GT1dHdbY2QmUO07N8hLt`\n  const resp = await fetch(url)\n  const { data } = await resp.json()\n  const gifs = data.map(img => {\n    return {\n      id: img.id,\n      title: img.title,\n      url: img.images.downsized_medium.url\n    }\n  })\n  return gifs\n}","import React from 'react'\n\nexport const GifGridItem = ({title, url}) => {\n  return (\n    <div className='card animate__animated animate__bounce'>\n      <img src={url} alt={title}/>\n      <p>{title}</p>\n    </div>\n  )\n}\n","import React from \"react\";\nimport { useFetchGifs } from \"../hooks/useFetchGifs\";\nimport { GifGridItem } from \"./GifGridItem\";\n\nexport const GifGrid = ({ category }) => {\n\n  const{ data: images, loading } = useFetchGifs(category);\n\n  return (\n    <>\n      <h3>{category}</h3>\n      <div className=\"card-grid\">\n        {loading ? <p>Cargando...</p> : images.map((img) => (\n          <GifGridItem key={img.id} {...img} />\n        ))}\n      </div>\n    </>\n  );\n};\n","import { useState, useEffect } from 'react'\nimport { getGifs } from \"../helpers/getGifs\";\n\nexport const useFetchGifs = (category) => {\n  const [state, setstate] = useState({\n    data: [],\n    isLoading: true\n  })\n\n  useEffect(() => {\n    getGifs(category).then(imgs => setstate({\n      data:imgs,\n      isLoading: false\n    }))\n  }, [category]);\n\n  return state;\n}\n","import React, {useState} from 'react'\nimport { AddCategory } from './components/AddCategory'\nimport { GifGrid } from './components/GifGrid'\n\n// const categories = ['One punch', 'Samurai X', 'Dragon ball']\n\n\nconst GifExpertApp = () => {\n\n  const [categories, setCategories] = useState(['One punch', 'Samurai X', 'Dragon ball'])\n\n  // const handleAdd = ()=>{\n  //   const category = 'HunterXHunter'\n  //   setCategories(state=> [...state, category])\n\n  // }\n  return (\n    <>\n      <h2>GifExpertApp</h2>\n      <AddCategory setCategories = {setCategories}/>\n      <hr/>\n      {/* <button onClick={handleAdd}>Agregar</button> */}\n\n      <ol>\n        {\n          categories.map( category => <GifGrid key={category} category={category}/> )\n        }\n      </ol>\n    </>\n  )\n}\n\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport GifExpertApp from './GifExpertApp'\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}